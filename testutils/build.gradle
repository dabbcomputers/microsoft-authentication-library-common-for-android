apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    def labClientSecret = "" // will be blank unless specified by developer

    if (project.hasProperty("labSecret")) {
        labClientSecret = labSecret
    }

    def saveTestResultsToCsv = false

    if (project.hasProperty("writeTestResultsToCsv")) {
        saveTestResultsToCsv = getBoolean(writeTestResultsToCsv);
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "LAB_CLIENT_SECRET", "\"$labClientSecret\"")
        buildConfigField("boolean", "SAVE_TEST_RESULTS_TO_CSV", "$saveTestResultsToCsv")
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    buildTypes {
        debug {
            testCoverageEnabled false
            debuggable true
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            exclude 'com/microsoft/identity/internal/testutils/lab/'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':common')
    implementation project(':keyvault')
    implementation project(':labapi')
    implementation "org.mockito:mockito-android:$rootProject.ext.mockitoAndroidVersion"
    implementation "androidx.test:core:$rootProject.ext.androidxTestCoreVersion"
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    implementation "com.nimbusds:nimbus-jose-jwt:$rootProject.ext.nimbusVersion"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "junit:junit:$rootProject.ext.junitVersion"
    compileOnly "org.projectlombok:lombok:$rootProject.ext.lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$rootProject.ext.lombokVersion"
}

static boolean getBoolean(final String s) {
    return s == null ? false : s.toBoolean();
}
